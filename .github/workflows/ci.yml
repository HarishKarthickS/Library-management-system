
name: CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  backend:
    name: Backend API Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: library_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d library_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: backend
        run: npm install

      - name: Set up environment variables
        working-directory: backend
        run: |
          echo "DATABASE_URL=postgresql://postgres:password@localhost:5432/library_db" > .env
          echo "API_KEY=b53e7ec0605a96f154622f465ae20d2c7882b5c2873f83138f273b8988875f92" >> .env

      - name: Wait for PostgreSQL to be ready
        run: sleep 5

      - name: Push Prisma Schema
        working-directory: backend
        run: npx prisma db push

      - name: Run Backend Linter
        working-directory: backend
        run: npm run lint

      - name: Run tests
        working-directory: backend
        run: npm test

  frontend:
    name: Frontend Build & Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm install

      - name: Run Linter
        working-directory: frontend
        run: npm run lint

      - name: Build Frontend
        working-directory: frontend
        run: npm run build
